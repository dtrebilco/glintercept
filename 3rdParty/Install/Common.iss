; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]

AppPublisher=Damian Trebilco
AppPublisherURL=http://code.google.com/p/glintercept/
AppSupportURL=http://code.google.com/p/glintercept/
AppUpdatesURL=http://code.google.com/p/glintercept/

DisableProgramGroupPage=yes
UsePreviousAppDir=no
LicenseFile="..\..\Docs\license.txt"

Compression=lzma/ultra
SolidCompression=yes

[Files]

Source: "..\..\Bin\Profiles\gliConfig.xni"; DestDir: "{app}"; AfterInstall: After_INI_Install('{app}\gliConfig.xni'); Flags: ignoreversion deleteafterinstall
Source: "..\..\Bin\Profiles\gliConfig_AuthorStd.xni"; DestDir: "{app}"; AfterInstall: After_INI_Install('{app}\gliConfig_AuthorStd.xni'); Flags: ignoreversion deleteafterinstall
Source: "..\..\Bin\Profiles\gliConfig_ExtOverride.xni"; DestDir: "{app}"; AfterInstall: After_INI_Install('{app}\gliConfig_ExtOverride.xni'); Flags: ignoreversion deleteafterinstall
Source: "..\..\Bin\Profiles\gliConfig_FreeCam.xni"; DestDir: "{app}"; AfterInstall: After_INI_Install('{app}\gliConfig_FreeCam.xni'); Flags: ignoreversion deleteafterinstall
Source: "..\..\Bin\Profiles\gliConfig_FullDebug.xni"; DestDir: "{app}"; AfterInstall: After_INI_Install('{app}\gliConfig_FullDebug.xni'); Flags: ignoreversion deleteafterinstall
Source: "..\..\Bin\Profiles\gliConfig_ShaderEdit.xni"; DestDir: "{app}"; AfterInstall: After_INI_Install('{app}\gliConfig_ShaderEdit.xni'); Flags: ignoreversion deleteafterinstall
Source: "..\..\Bin\Profiles\gliConfig_XMLFrame.xni"; DestDir: "{app}"; AfterInstall: After_INI_Install('{app}\gliConfig_XMLFrame.xni'); Flags: ignoreversion deleteafterinstall
Source: "..\..\Bin\Profiles\gliConfig_DebugContext.xni"; DestDir: "{app}"; AfterInstall: After_INI_Install('{app}\gliConfig_DebugContext.xni'); Flags: ignoreversion deleteafterinstall

Source: "..\..\Docs\license.txt"; DestDir: "{app}\Doc"; Flags: ignoreversion
Source: "..\..\Docs\licence_corona.txt"; DestDir: "{app}\Doc"; Flags: ignoreversion
Source: "..\..\Docs\licence_glsl.txt"; DestDir: "{app}\Doc"; Flags: ignoreversion
Source: "..\..\Docs\licence_scite.txt"; DestDir: "{app}\Doc"; Flags: ignoreversion
Source: "..\..\Docs\version_info.txt"; DestDir: "{app}\Doc"; Flags: ignoreversion

Source: "..\..\Docs\readme.txt"; DestDir: "{app}"; Flags: ignoreversion isreadme
Source: "..\..\Bin\XSL\*.*"; DestDir: "{app}\XSL"; Flags: ignoreversion recursesubdirs
Source: "..\..\Bin\GLFunctions\*.*"; DestDir: "{app}\GLFunctions"; Flags: ignoreversion recursesubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

; Delete the generated ini file
[UninstallDelete]
Type: files; Name: "{app}\*.ini"

[Code]


procedure After_INI_Install(inFile : String);
var
  FileDataAnsi : AnsiString;
  FileData : String;
  GLIConfig: String;

begin
  //MsgBox('Processing start ' + inFile,mbInformation, MB_OK);
  inFile := ExpandConstant(inFile);
  
  // Read the entire config file
  if LoadStringFromFile(inFile,FileDataAnsi) then begin
    FileData := String(FileDataAnsi)

    //Swap the specific characters with the path
    GLIConfig := ExpandConstant('{app}');
    StringChange(FileData,'%InstallPath%',GLIConfig);

    inFile := ChangeFileExt(inFile, '.ini');

    //Write out the new config file
    if not SaveStringToFile(inFile,FileData,False) then begin
       MsgBox('Failure writing config file ' + inFile ,mbInformation, MB_OK);
    end;

  end else
    MsgBox('Failure reading config file ' + inFile,mbInformation, MB_OK);

end;
